buildscript {
    apply from: gradle.dolbyio.files.modules

    dependencies {
        classpath dolbyio.nexus.gradlePlugin
        classpath dolbyio.sonarqube.gradlePlugin
        classpath dolbyio.license.gradlePlugin
    }
}

plugins {
    alias(dolbyio.plugins.publish.nexus)
    alias(dolbyio.plugins.kotlin.multiplatform) apply false
    alias(dolbyio.plugins.android.library) apply false
    alias(dolbyio.plugins.kotlin.jvm) apply false
    alias(dolbyio.plugins.multiplatform.moko.resources.generator) apply false
}

group = "eu.codlab"
version = property("version")

subprojects {
    group = "eu.codlab"
    version = property("version")

    task allDeps(type: DependencyReportTask) {}

    if (isSourcesModule(it)) {
        apply from: gradle.dolbyio.files.moduleSetup
    }
}

/**
 * Definitions for the publication only
 */
def getExtraString = {String name ->
    if (rootProject.ext.has(name)) return rootProject.ext[name]?.toString()
    else return null
}

nexusPublishing {
    repositories {
        sonatype {
            username = getExtraString("sonatypeUsername") ?: ""
            password = getExtraString("sonatypePassword") ?: ""
        }
    }
}
